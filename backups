
/* CSS declarations go here */
/* The login menu has to be set at a specific height and I chose to center mine. */


#login_form{
  display: inline-block;
  position: relative;
  height: 245px;
  margin-left: auto;
  margin-right: auto;
  float: none;
}

.main_container{
  width:1000px;
  margin: auto;
  margin-top: 100px;
  background-color: red;
}

#home_image{
  display: inline-block;
  width: 500px;
  vertical-align: top;
}

#home_description{
  display: inline-block;
  width: 340px;
  padding: 20px;
}

#signUp .dropdown-menu {
  display: block;
  position: relative;
  height: 245px;
  margin-left: auto;
  margin-right: auto;
  float: none;
  color: red;
}

#signUp #login-dropdown-list {
  display: block;
}

/* Hides the toggle that you click on */

#signUp a.dropdown-toggle {
  display: none;
}

.content{ background: #FFF; }
.title_link{
  font-size: 15px;
  vertical-align: 4px;
}

a{
text-decoration: none;
color: #436690;
}

/* Hides the toggle that you click on */

#signUp a.dropdown-toggle {
  display: none;
}

#nw {
  background: white; 
  top: 20%; 
  left: 0%; 
  right: 50%; 
  bottom: 48%;
  height: 32%;
  width: 48%;
  position: absolute;
  padding: 10px;
  /*padding: 1em;*/
  /*margin: 5px;*/
  /*padding: 1em;*/
  border: 1px solid #000;
}

#ne {
  background: white; 
  top: 20%; 
  left: 50%; 
  right: 0%; 
  bottom: 48%;
  height: 32%;
  width: 48%;
  position: absolute;
  /*padding: 1em;*/
  padding: 10px;
  border: 1px solid #000;
}

#sw {
  background: white; 
  top: 52%; 
  left: 0%; 
  right: 50%; 
  bottom: 16%;
  height: 32%;
  width: 48%;
  position: absolute;
  /*padding: 1em;*/
  padding: 10px;
  border: 1px solid #000;
}

#se {
  background: white; 
  top: 52%; 
  left: 50%; 
  right: 0%; 
  bottom: 16%;
  height: 32%;
  width: 48%;
  position: absolute;
  /*padding: 1em;*/
  padding: 10px;
  border: 1px solid #000;
}

var forgotPasswordForm = $(e.currentTarget),
            email = trimInput(forgotPasswordForm.find('#forgotPasswordEmail').val().toLowerCase());

        if (isNotEmpty(email) && isEmail(email)) {
            Accounts.forgotPassword({email: email}, function(err) {
                if (err) {
                    if (err.message === 'User not found [403]') {
                        Session.set('alert', 'This email does not exist.');
                    } else {
                        Session.set('alert', 'We\'re sorry but something went wrong.');
                    }
                } else {
                    Session.set('alert', 'Email Sent. Please check your mailbox to reset your password.');
                }
            });
        }
        return false;
    },

    'click #returnToSignIn': function(e, t) {
        Session.set('showForgotPassword', null);
        return false;
    },
#header {
  background: #d2edf4;
  position: absolute;
  width: 100%;
  height: 15%;
  bottom: 85%;
  top: 0%;
  right: 0%;
  left: 0%;
  border: 1px solid #000;
  padding: 5px;
  padding-left: 20px;
}

#timeline {
  background: #d2edf4;
/*  background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);*/
/*  padding: 5px 5px 5px 5px; */
  position: absolute;
  top: 85%;
  bottom:0%;
  left: 0%;
  right: 0%;
  height: 15%;
  width: 100%;
/*  display: inline-block; */
  border: 1px solid #000;
  padding: 5px;
}

timeline_event {
  background: gray;
  min-height: 100%;
  max-width: 30%;
  /* background-image: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%); */
  padding: 10px 10px 10px 10px;
  position: left;
  display: inline-block;
}

/*#login-buttons {
  display: block;
}*/

h1 {
  font-size: 2em;
  /*margin: 0;
  margin-bottom: 10px;
  display: inline-block;
  margin-right: 1em;*/
}

h1.title {
  margin: 0;
  background-color: #CCCCFF;
  padding: 15px;
  color: #996699;
  font-size: 2em;
  font-style: normal;
  font-family: Comic Sans MS, Tahoma, Verdana, sans-serif;
}

#nav {
  display: block; 
  position: absolute;
  width: 100%;
  height: 5%;
  top: 15%;
  bottom: 80%;
  left:0%;
  right: 0%;
/*  border-bottom: 4px solid DarkSlateGrey;*/
  background-color: #3333cc;
  /*color: white;*/
  /*font-size: 1em;
  font-style: normal;*/
  padding: 3px;
  padding-left: 6px;
  border: 1px solid #000;
}

nav a{
text-decoration:none;
color: white;
}

a:visited{
color:white;
text-decoration: none;
}

/*form {
  margin-top: 10px;
  margin-bottom: -10px;
  position: relative;
}*/

.new-task input {
  box-sizing: border-box;
  padding: 10px 0;
  background: transparent;
  border: none;
  width: 100%;
  padding-right: 80px;
  font-size: 1em;
}

.new-task input:focus{
  outline: 0;
}

/*
ul {
  margin: 0;
  padding: 0;
  background: white;
}*/

.delete {
  float: right;
  font-weight: bold;
  background: none;
  font-size: 1em;
  border: none;
  position: relative;
}

/*
li {
  position: relative;
  list-style: none;
  padding: 15px;
  border-bottom: #eee solid 1px;
}

li .text {
  margin-left: 10px;
}

li.checked {
  color: #888;
}

li.checked .text {
  text-decoration: line-through;
}

li.private {
  background: #eee;
  border-color: #ddd;
}

header .hide-completed {
  float: right;
}

.toggle-private {
  margin-left: 5px;
}*/

@media (max-width: 600px) {
  li {
    padding: 12px 15px;
  }

  .search {
    width: 150px;
    clear: both;
  }

  .new-task input {
    padding-bottom: 5px;
  }
}


<template name="home_page">
   <!-- <form id="login_form" action="action" align="center" style="width:50%;height:228px">
        E-mail: <input type="email" id="login-email"/><p></p>
        Password: <input type="password" id="login-password"/><p></p>
        <input type="submit" id="login-button" value="Sign in"/>
   </form> --> 
   <div id="login_form">
        {{#unless resetPassword}}
              {{#unless currentUser}}
                  {{#unless showForgotPassword}}
                      {{> signIn}}
                      {{> signUp}}
                  {{else}}
                      {{> forgotPassword}}
                  {{/unless}}
              {{else}}
                  {{> signOut}}
              {{/unless}}
          {{else}}
              {{> resetPassword}}
          {{/unless}}
    </div>

    <div class="main_container">
        <h1>GraviTeam</h1>
        <div class="content">
            <div id="home_image">
                <img src="home.jpeg">
            </div>
            <div id="home_description">
                <h2>What's GraviTeam?</h2>

                <p> GraviTeam GraviTeam GraviTeam GraviTeam
                GraviTeam GraviTeam GraviTeam
                GraviTeam GraviTeam GraviTeam 
                GraviTeam GraviTeam GraviTeam 
                ...</p>
            </div>
        </div>
    </div>

</template>

<!-- <template name="register">
    <form id="register-form" action="action">
       E-mail: <input type="email" id="account-email"/><p></p>
       Password: <input type="password" id="account-password"/><p></p>
       <input type="submit" id="create-account" value="Create an Account"/>
   </form>
</template> --> 

{{#unless resetPassword}}
              {{#unless currentUser}}
                  {{#unless showForgotPassword}}
                      {{> signIn}}
                      {{> signUp}}
                  {{else}}
                      {{> forgotPassword}}
                  {{/unless}}
              {{else}}
                  {{> signOut}}
              {{/unless}}
          {{else}}
              {{> resetPassword}}
          {{/unless}}

// main.js

//--------------------------------------------------------------
/*
  Template.login.events({
    'submit login-form' : function(e, t){
      e.preventDefault();
      // retrieve the input field values
      var emailVar = t.find('#login-email').value;
      var passwordVar = t.find('#login-password').value;
        // Trim and validate your fields here.... 
        // If validation passes, supply the appropriate fields to the
        // Meteor.loginWithPassword() function.
        Meteor.loginWithPassword(emailVar, passwordVar);
     }
  });
*/
  Template.graviteam.logged_in = function(){
    return Meteor.user();
  };

  Template.Dashboard.events({
    'click #logout' : function(event, template){
    event.preventDefault();
    Meteor.logout();
    }  
  });

  Template.Register.events({
    'submit #registerform' : function(event, template) {
      //console.log('submit registration form.');
      event.preventDefault();
      var registerform = $(event.currentTarget),
        email = trimInput(registerform.find('#signinEmail').val().toLowerCase()),
        password = registerform.find('#signinPassword').val(),
        passwordConfirm = registerform.find('#signinPasswordConfirm').val();
    
      if (isNotEmpty(email) && isNotEmpty(password) && isEmail(email) && areValidPasswords(password, passwordConfirm)) {
     // var passwordVar = template.find('#account-password').value;
    // With Accounts.CreateUser, the passwrod is auto encrypted and the 
    //user is automatically logged in.
     //Accounts.createUser({email: emailVar, password : passwordVar});
        Accounts.createUser({email: email, password: password}, function(err) {
          if (err) {
            if (err.message === 'Email already exists. [403]') {
              console.log('We are sorry but this email is already used.');
            } else {
              console.log('We are sorry but something went wrong.');
            }
          } else {
            console.log('Congratulations new SpaceBuff, you\'re in!');
          }
      });

    }
    return false;
    }
  });

Template.Signin.events({
  'submit #signinForm': function(event, template) {
    event.preventDefault();

    var signinForm = $(event.currentTarget),
          email = trimInput(signinForm.find('.email').val().toLowerCase()),
          password = signinForm.find('.password').val();

    if (isNotEmpty(email) && isEmail(email) && isNotEmpty(password) && isValidPassword(password)) {

      Meteor.loginWithPassword(email, password, function(err) {
        if (err) {
          console.log('These credentials are not valid.');
        } else {
          console.log('Welcome back SpaceBuff!');
        }
      });

    }
    return false;
  },
});

Template.Signout.events({
  'click #signOut': function(event, template) {

    Meteor.logout(function() {
      console.log('Bye SpaceBuff! Come back whenever you want!');
    });

    return false;
  }
});

trimInput = function(value) {
    return value.replace(/^\s*|\s*$/g, '');
};

isNotEmpty = function(value) {
    if (value && value !== ''){
        return true;
    }
    console.log('Please fill in all required fields.');
    return false;
};

isEmail = function(value) {
    var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
    if (filter.test(value)) {
        return true;
    }
    console.log('Please enter a valid email address.');
    return false;
};

isValidPassword = function(password) {
    if (password.length < 6) {
        console.log('Your password should be 6 characters or longer.');
        return false;
    }
    return true;
};

areValidPasswords = function(password, confirm) {
    if (!isValidPassword(password)) {
        return false;
    }
    if (password !== confirm) {
        console.log('Your two passwords are not equivalent.');
        return false;
    }
    return true;
};
// CCT.html

<template name="Register">

    <form action="/sign-in" id="registerform" method="post">
        <input id="signinEmail" name="email" placeholder="Email Address" type="text" >
        <input id="signinPassword" name="password" placeholder="Password" type="password">
        <input id="signinPasswordConfirm" name="password-confirm" placeholder="Confirm" type="password">
        <input class="btn-submit" type="submit" value="Join SpaceBuffs!">
    </form>


</template>

<template name="Signin">

    <form action="/signin" id="signinForm" method="post">
        <input id="signinEmail" type="text" name="email" placeholder="Email Address">
        <input id="signinPassword" type="password" name="password" placeholder="Password">
        <input class="btn-submit" type="submit" value="Sign In">
    </form>

</template>


<template name="Signout">

    <div class="connected">
        <span class="welcome">Welcome New SpaceBuff!</span>
        <a class="sign-out" href="/" id="signout">Sign Out</a>
    </div>

</template>
